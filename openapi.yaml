openapi: 3.0.1
info:
  title: API Service
  version: 1.0.0
  description: API Service endpoints
  contact:
    email: fyelci@fyelci.com
    name: Fatih Yelci
servers:
  - url: 'http://localhost:3000/api/'
tags:
  - name: post
    description: Sample Service APIs
paths:
  /ping:
    get:
      tags:
        - ping
      summary: Ping endpoint
      operationId: ping
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: string
                example: 'pong'
        '500':
          description: Server error
  /posts:
    post:
      tags:
        - post
      summary: Add a post to the database
      operationId: post-add
      requestBody:
        description: New user signing up
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasePostSchema'
      responses:
        '201':
          description: Post was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePostSchema'
        '500':
          description: Server error
    get:
      tags:
        - post
      summary: Get Posts. Also can search by params
      operationId: post-search
      parameters:
        - in: query
          name: title
          schema:
            type: string
          description: String containing full title or partial title of the post
        - in: query
          name: author
          schema:
            type: string
          description: String containing full name or partial name of the author
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostSchema'
        '500':
          description: Server error
  /posts/{id}:
    put:
      tags:
        - post
      summary: Update post by id
      operationId: updatePostById
      requestBody:
        description: New user signing up
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasePostSchema'
      parameters:
        - in: path
          name: id
          description: Webhook Mapping Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePostSchema'
    delete:
      tags:
        - post
      summary: Delete post by id
      operationId: deletePostById
      parameters:
        - in: path
          name: id
          description: Webhook Mapping Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
components:
  schemas:
    OK:
      type: object
      properties:
        message:
          type: string
          example: 'OK'
    BasePostSchema:
      type: object
      properties:
        title:
          type: string
          example: The Hitchhiker's Guide to the Galaxy
        author:
          type: string
          example: Douglas Adams
        totalPages:
          type: integer
          example: 120
        publishDate:
          type: string
          example: '2020-03-21T20:38:42.968Z'
    PostSchema:
      allOf:
        - $ref: '#/components/schemas/BasePostSchema'
      type: object
      properties:
        _id:
          type: string
          example: 5d7224d3b40b1a1a046697dd
